{"version":3,"file":"ParticlesBackground-CoTAmli_.js","sources":["../../src/components/ParticlesBackground.tsx"],"sourcesContent":["import { Canvas, useFrame } from '@react-three/fiber';\nimport { Float, OrbitControls } from '@react-three/drei';\nimport { useRef, useMemo } from 'react';\nimport * as THREE from 'three';\nimport styled from 'styled-components';\n\nconst CanvasContainer = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  pointer-events: none;\n  z-index: -1;\n`;\n\n// Floating code cube component\nfunction CodeCube({\n  position,\n  rotationSpeed,\n}: {\n  position: [number, number, number];\n  rotationSpeed: number;\n}) {\n  const meshRef = useRef<THREE.Mesh>(null);\n\n  useFrame((state) => {\n    if (meshRef.current) {\n      meshRef.current.rotation.x += rotationSpeed * 0.3;\n      meshRef.current.rotation.y += rotationSpeed * 0.2;\n      meshRef.current.position.y =\n        position[1] + Math.sin(state.clock.elapsedTime + position[0]) * 0.1;\n    }\n  });\n\n  return (\n    <Float speed={0.5} rotationIntensity={0.2} floatIntensity={0.2}>\n      <mesh ref={meshRef} position={position}>\n        <boxGeometry args={[0.6, 0.6, 0.6]} />\n        <meshBasicMaterial\n          color='#64ffda'\n          transparent\n          opacity={0.15}\n          wireframe\n        />\n      </mesh>\n    </Float>\n  );\n}\n\n// Floating geometric shapes\nfunction CodeSphere({ position }: { position: [number, number, number] }) {\n  const meshRef = useRef<THREE.Mesh>(null);\n\n  useFrame((state) => {\n    if (meshRef.current) {\n      meshRef.current.rotation.x = state.clock.elapsedTime * 0.1;\n      meshRef.current.rotation.y = state.clock.elapsedTime * 0.15;\n      meshRef.current.position.x =\n        position[0] + Math.sin(state.clock.elapsedTime * 0.3) * 0.2;\n    }\n  });\n\n  return (\n    <mesh ref={meshRef} position={position}>\n      <sphereGeometry args={[0.2, 12, 12]} />\n      <meshBasicMaterial color='#82aaff' transparent opacity={0.2} wireframe />\n    </mesh>\n  );\n}\n\n// Octahedron shapes\nfunction CodeOctahedron({ position }: { position: [number, number, number] }) {\n  const meshRef = useRef<THREE.Mesh>(null);\n\n  useFrame((state) => {\n    if (meshRef.current) {\n      meshRef.current.rotation.x = state.clock.elapsedTime * 0.15;\n      meshRef.current.rotation.z = state.clock.elapsedTime * 0.1;\n      meshRef.current.position.z =\n        position[2] + Math.sin(state.clock.elapsedTime * 0.4) * 0.15;\n    }\n  });\n\n  return (\n    <mesh ref={meshRef} position={position}>\n      <octahedronGeometry args={[0.25]} />\n      <meshBasicMaterial color='#c792ea' transparent opacity={0.25} wireframe />\n    </mesh>\n  );\n}\n\n// Main 3D scene\nfunction Scene() {\n  const cubes = useMemo(\n    () =>\n      Array.from({ length: 2 }, () => ({\n        // Reduced from 4 to 2\n        position: [\n          (Math.random() - 0.5) * 10,\n          (Math.random() - 0.5) * 8,\n          (Math.random() - 0.5) * 6,\n        ] as [number, number, number],\n        rotationSpeed: 0.002 + Math.random() * 0.005,\n      })),\n    []\n  );\n\n  const spheres = useMemo(\n    () =>\n      Array.from({ length: 3 }, () => ({\n        // Reduced from 6 to 3\n        position: [\n          (Math.random() - 0.5) * 12,\n          (Math.random() - 0.5) * 10,\n          (Math.random() - 0.5) * 8,\n        ] as [number, number, number],\n      })),\n    []\n  );\n\n  const octahedrons = useMemo(\n    () =>\n      Array.from({ length: 2 }, () => ({\n        // Reduced from 3 to 2\n        position: [\n          (Math.random() - 0.5) * 14,\n          (Math.random() - 0.5) * 12,\n          (Math.random() - 0.5) * 10,\n        ] as [number, number, number],\n      })),\n    []\n  );\n\n  return (\n    <>\n      <ambientLight intensity={0.3} />\n      <pointLight position={[10, 10, 10]} intensity={0.5} />\n      <pointLight position={[-10, -10, -10]} intensity={0.2} color='#64ffda' />\n\n      {/* Floating code cubes */}\n      {cubes.map((cube, index) => (\n        <CodeCube\n          key={`cube-${index}`}\n          position={cube.position}\n          rotationSpeed={cube.rotationSpeed}\n        />\n      ))}\n\n      {/* Floating symbol spheres */}\n      {spheres.map((sphere, index) => (\n        <CodeSphere key={`sphere-${index}`} position={sphere.position} />\n      ))}\n\n      {/* Floating octahedrons */}\n      {octahedrons.map((oct, index) => (\n        <CodeOctahedron key={`oct-${index}`} position={oct.position} />\n      ))}\n\n      {/* Subtle camera controls */}\n      <OrbitControls\n        enableZoom={false}\n        enablePan={false}\n        autoRotate\n        autoRotateSpeed={0.2}\n        maxPolarAngle={Math.PI / 2}\n        minPolarAngle={Math.PI / 2}\n      />\n    </>\n  );\n}\n\nconst ParticlesBackground = () => {\n  return (\n    <CanvasContainer>\n      <Canvas\n        camera={{\n          position: [0, 0, 8],\n          fov: 50,\n          near: 0.1,\n          far: 1000,\n        }}\n        gl={{\n          antialias: false, // Disable antialias for better performance\n          alpha: true,\n          powerPreference: 'high-performance',\n          stencil: false,\n          depth: false,\n        }}\n        dpr={Math.min(window.devicePixelRatio, 2)} // Limit pixel ratio for performance\n        performance={{ min: 0.5 }} // Enable automatic performance scaling\n      >\n        <Scene />\n      </Canvas>\n    </CanvasContainer>\n  );\n};\n\nexport default ParticlesBackground;\n"],"names":["CanvasContainer","styled","CodeCube","position","rotationSpeed","meshRef","useRef","useFrame","state","jsx","Float","jsxs","CodeSphere","CodeOctahedron","Scene","cubes","useMemo","spheres","octahedrons","Fragment","cube","index","sphere","oct","OrbitControls","ParticlesBackground","Canvas"],"mappings":"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"}